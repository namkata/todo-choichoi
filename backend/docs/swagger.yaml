basePath: /
definitions:
  models.Todo:
    properties:
      createdAt:
        type: string
      dueAt:
        description: 'Inline: optional deadline'
        type: string
      id:
        description: 'Inline: UUID primary key'
        type: string
      note:
        description: 'Inline: optional note'
        type: string
      status:
        description: 'Inline: pending|completed'
        type: string
      title:
        description: 'Inline: short title'
        type: string
      updatedAt:
        type: string
    type: object
  models.TogglePayload:
    properties:
      completed:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API cho ứng dụng Todo (tạo ghi chú, thời hạn, theo dõi quá hạn)
  title: Todo Choichoi API
  version: "1.0"
paths:
  /api/todos:
    get:
      description: Retrieve all todos ordered by created time desc
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: List todos
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create a new todo item with optional note and deadline
      parameters:
      - description: Todo payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create todo
      tags:
      - todos
  /api/todos/{id}:
    delete:
      description: Delete a todo item by id
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete todo
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update a todo item by id
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: Todo payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
      summary: Update todo
      tags:
      - todos
  /api/todos/{id}/complete:
    patch:
      consumes:
      - application/json
      description: Mark a todo completed or pending
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: Toggle payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.TogglePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
      summary: Toggle complete
      tags:
      - todos
schemes:
- http
swagger: "2.0"
